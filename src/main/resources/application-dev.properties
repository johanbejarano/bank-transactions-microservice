#Info SpringBoot Microservices App
spring.application.name=transactions-microservice
spring.info.build.encoding=UTF-8

#Spring DataSource Basic Config
spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/bank
spring.datasource.username= postgres
spring.datasource.password= postgres

#Hikari DataSource
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=60000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.auto-commit=true

#Hibernate ORM
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.show_sql = true
#spring.jpa.properties.hibernate.use_sql_comments = true
#spring.jpa.properties.hibernate.format_sql = true

#Tomcat Server Basic Config
server.port=8083
server.max-http-header-size=8KB
server.tomcat.max-swallow-size=2MB
#server.address=my_custom_ip
#server.compression.enabled=true
#server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css,image/jpeg

#Tomcat Server Access Logs
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.directory=logs
server.tomcat.accesslog.file-date-format=yyyy-MM-dd
server.tomcat.accesslog.prefix=access_log
server.tomcat.accesslog.suffix=.log

#Logs
logging.file.name=bank-backend-devops.log
logging.level.org.springframework=INFO
#logging.level.org.hibernate=INFO
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql=TRACE





login.service.username = admin
login.service.password = password

eureka.client.service-url.defaultZone=http://localhost:8761/eureka 

#Propiedades de fault tolerace

#Muestreo de invocaciones a tener en cuenta (La últimas 10 peticiones)
resilience4j.circuitbreaker.instances.accountsService.sliding-window-size=10
#Porcentaje de las peticiones que se tendrán en cuenta (Si fallan mas de ese porcentaje, se cambia de estado) 50%
resilience4j.circuitbreaker.instances.accountsService.failure-rate-threshold=50
#Cantidad de milisegundos que la compuerta permanecerá en estado Open (60 segs)
resilience4j.circuitbreaker.instances.accountsService.wait-duration-in-open-state=60000
#Habilitar la transición automática entre estado Open --> Halfopen
resilience4j.circuitbreaker.instances.accountsService.automatic-transition-from-open-to-half-open-enabled=true
#Muestreo de peticiones cuando la compuerta está HalfOpen (5 peticiones)
resilience4j.circuitbreaker.instances.accountsService.permitted-number-of-calls-in-half-open-state=5

#Registrar el HealthIndicator
resilience4j.circuitbreaker.instances.accountsService.allow-health-indicator-to-fail=true
resilience4j.circuitbreaker.instances.accountsService.register-health-indicator=true

#Registrar Actuator para consultar los estados de los servicios
#Monitoring Spring Boot Actuator path /actuator/
#https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-features.html#production-ready
management.health.circuitbreakers.enabled=true
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*
